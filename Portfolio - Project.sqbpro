Covid 19 Data Exploration

Select *
FROM CovidDeaths
WHERE continent is not NULL
order by 3,4


-- Select Data that we are going to be using 

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths
Wher Continent is not null
order by 1,2


-- Looking at Total Cases vs Total Deaths 
-- Shows likelihood of dying if you contract covid in your country

SELECT location, date, total_cases, total_deaths, total_deaths * 1.0 / total_cases *100 as death_percentage
FROM CovidDeaths


-- Looking at Total Cases vs Population 
-- Shows what percentage of population got Covid 

SELECT location, date, total_cases, population, (total_cases * 1.0 / population) *100 as percent_population_inffected
FROM CovidDeaths
Where location like '%states%'
order by 1,2


-- Looking at Countries with Highest Infection Rate compared to Population 

SELECT location, population, max(total_cases) as Highest_Infection_Count, max((total_cases * 1.0 / population)) *100 as percent_population_inffected
FROM CovidDeaths
--Where location like '%states%'
GROUP by location, population
order by Percent_Population_Inffected DESC




-- Showing Continents with the Highest Death Count per Population 

SELECT continent, max(CAST(total_deaths as INT)) as total_death_count
FROM CovidDeaths
WHERE continent is NOT NULL
GROUP by continent
order by total_death_count DESC


-- Breaking Global Numbers 

SELECT sum(new_cases) as total_cases, sum(CAST(new_deaths as INT)) as total_deaths, sum(cast(new_deaths *1.0 as INT))/sum(new_cases * 1.0) * 100 as death_percentage
FROM CovidDeaths
WHERE continent is NOT NULL
--GROUP by date 
order by 1,2


-- Joining 2 Tables together

Select *
FROM CovidDeaths as dea 
JOIN 'Covid-Vaccinations' as vac 
	ON dea.location = vac.location 
	and dea.date = vac.date;

	

-- Looking at Total Population vs Vaccination

Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
sum(CAST(vac.new_vaccinations as INT)) OVER 
(PARTITION by dea.location ORDER by dea.location, dea.date) as Rolling_People_Vaccinated
FROM CovidDeaths as dea 
JOIN 'Covid-Vaccinations' as vac 
	ON dea.location = vac.location 
	and dea.date = vac.date	
WHERE dea.continent is not NULL
order by 2,3



-- Temporary TABLE

DROP TABLE IF EXISTS Percent_Population_Vaccinated;
CREATE TEMPORARY TABLE Percent_Population_Vaccinated (
    continent NVARCHAR(255)
    location NVARCHAR(255),
    date DATETIME,
    population NUMERIC, 
    new_vaccinations NUMERIC, 
    Rolling_People_Vaccinated NUMERIC

);

INSERT INTO Percent_Population_Vaccinated
SELECT 
    dea.continent, 
    dea.location, 
    dea.date, 
    dea.population, 
    vac.new_vaccinations, 
    SUM(CAST(vac.new_vaccinations AS INT)) OVER 
    (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS Rolling_People_Vaccinated
FROM 
    CovidDeaths AS dea 
JOIN 
    'Covid-Vaccinations' AS vac
    ON dea.location = vac.location 
    AND dea.date = vac.date    
WHERE 
    dea.continent IS NOT NULL
ORDER BY 
    2, 3;
SELECT *, (Rolling_People_Vaccinated * 1.0 / population) * 100 AS Percentage_Vaccinated
FROM Percent_Population_Vaccinated;



-- Creating View to store data for later Visualization

CREATE VIEW Percent_Population_Vaccinated as
SELECT 
    dea.continent, 
    dea.location, 
    dea.date, 
    dea.population, 
    vac.new_vaccinations, 
    SUM(CAST(vac.new_vaccinations AS INT)) OVER 
    (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS Rolling_People_Vaccinated
FROM
    CovidDeaths AS dea 
JOIN 
    'Covid-Vaccinations' AS vac 
    ON dea.location = vac.location 
    AND dea.date = vac.date    
WHERE 
    dea.continent IS NOT NULL

